#!/usr/bin/env bash
# set -x # TRACE
set -euo pipefail

# This is free and unencumbered software released into the public domain.

# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.

# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# For more information, please refer to <http://unlicense.org/>

TFWATCH_VSN=0.0.2

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
  ARGS=$(getopt -o v -l version -n $(basename ${BASH_SOURCE[0]}) -- "$@")
  eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
  case "$1" in
    --version)
      echo "${TFWATCH_VSN}"
      exit
      ;;
    --)
      shift 1
      ;;
    *)
      # >&2 echo "$(basename ${BASH_SOURCE[0]}): unrecognized option '$*'"
      # exit 1
      break
      ;;
  esac
done

TFWATCH_FILE=tfwatch.tf
TFWATCH_VAR="$1"
shift

[[ $# -eq 0 ]] || {
  >&2 echo "$(basename ${BASH_SOURCE[0]}): unrecognized option '$*'"
  exit 1
}

function _tfwatch_cleanup() {
  rm -rf "${TFWATCH_FILE}"
}

trap _tfwatch_cleanup EXIT

cat <<EOF > "${TFWATCH_FILE}"
locals {
  tfwatch = ${TFWATCH_VAR}
}
EOF

watch \
  --beep \
  --color \
  --differences \
  --interval 1 \
  "echo \"local.tfwatch\" | terraform console"
